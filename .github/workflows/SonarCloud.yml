name: SonarCloud
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - name: Install libraries
        run: |
          sudo apt-get -q update
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -y g++-13 linux-libc-dev git build-essential automake libtool python3.12-dev zlib1g-dev gettext swig libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libfreetype6-dev libsigc++-2.0-dev libfribidi-dev libavahi-client-dev libjpeg-turbo8-dev libgif-dev libcurl4-openssl-dev

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disabilita il clone superficiale per una migliore analisi

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build enigma2 dependencies
        env:
          CC: "gcc-13"
          CXX: "g++-13"
        run: |
          echo "Installazione di libdvbsi++"
          cd /tmp
          git clone --depth 1 https://github.com/oe-alliance/libdvbsi.git
          cd libdvbsi
          autoreconf -i
          ./configure
          make
          sudo make install
          echo "Installazione di tuxbox"
          cd /tmp
          git clone --depth 1 https://github.com/oe-alliance/tuxtxt.git
          cd tuxtxt/libtuxtxt
          autoreconf -i
          ./configure --with-boxtype=generic DVB_API_VERSION=5
          make
          sudo make install
          cd ../tuxtxt
          autoreconf -i
          ./configure --with-boxtype=generic DVB_API_VERSION=5
          make
          sudo make install

      - name: Run build-wrapper
        env:
          CC: "gcc-13"
          CXX: "g++-13"
        run: |
          sed -i 's/include lib main data po tools/include lib main tools/g' Makefile.am
          autoreconf -i
          ./configure --with-libsdl=no --with-boxtype=nobox --enable-dependency-tracking ac_cv_prog_c_openmp=-fopenmp --with-gstversion=1.0 --with-textlcd
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"

